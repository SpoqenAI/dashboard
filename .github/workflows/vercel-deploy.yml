name: Vercel Production Deployment

on:
  push:
    branches: [main]
  release:
    types: [published]

permissions:
  contents: read
  deployments: write
  issues: write
  pull-requests: write

env:
  SENTRY_ORG: spoqen
  SENTRY_PROJECT: javascript-nextjs

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for Sentry to access git history

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run tests
        run: pnpm test -- --passWithNoTests

      - name: Build application
        run: pnpm build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        with:
          environment: production
          version: ${{ github.sha }}
          url_prefix: '~/'
          strip_common_prefix: true
          sourcemaps: '.next/static/chunks/'
          set_commits: auto
          finalize: true
          ignore_missing: true

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25.2.0
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-args: '--prod'
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          github-comment: false

      - name: Create Sentry deployment
        run: |
          npx @sentry/cli releases deploys ${{ github.sha }} new -e production -u https://www.spoqen.com
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: spoqen
          SENTRY_PROJECT: javascript-nextjs

      - name: Create deployment status
        uses: actions/github-script@v7
        with:
          script: |
            if (context.payload.deployment?.id) {
              github.rest.repos.createDeploymentStatus({
                owner: context.repo.owner,
                repo: context.repo.repo,
                deployment_id: context.payload.deployment.id,
                state: 'success',
                environment_url: 'https://www.spoqen.com',
                description: 'Deployment completed successfully'
              });
            } else {
              console.log('No deployment ID found, skipping status creation');
            }

  notify:
    runs-on: ubuntu-latest
    needs: deploy
    if: always()

    steps:
      - name: Notify deployment status
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ needs.deploy.result }}';
            const message = status === 'success' 
              ? '✅ Deployment successful!' 
              : '❌ Deployment failed!';

            console.log(`${message} - Status: ${status}`);
